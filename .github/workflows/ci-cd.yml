name: Stock Data API CI/CD

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]

env:
  DOTNET_VERSION: "9.0.x"
  NODE_VERSION: "18.x"

jobs:
  build-backend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore --configuration Release

      - name: Test
        run: dotnet test --no-build --configuration Release --verbosity normal

  build-frontend:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: "npm"
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        working-directory: frontend
        run: npm ci

      - name: Build
        working-directory: frontend
        run: npm run build

      - name: Test
        working-directory: frontend
        run: npm test -- --coverage --watchAll=false

  docker-build:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend]

    steps:
      - uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build API image
        run: docker build -t stock-data-api:latest src/StockDataApi/

      - name: Build Worker image
        run: docker build -t stock-data-worker:latest src/StockDataWorker/

      - name: Build Frontend image
        run: docker build -t stock-data-frontend:latest frontend/

  security-scan:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: "fs"
          scan-ref: "."
          format: "sarif"
          output: "trivy-results.sarif"

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v2
        with:
          sarif_file: "trivy-results.sarif"

  code-quality:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Run SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  auto-fix:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'

    steps:
      - uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}

      - name: Auto-fix build issues
        run: |
          # Check for common build issues and suggest fixes
          if ! dotnet build --no-restore --verbosity quiet; then
            echo "Build failed. Checking for common issues..."
            
            # Check for missing using statements
            if grep -r "CS0246" .; then
              echo "Missing type references detected"
            fi
            
            # Check for service registration issues
            if ! grep -q "GetAllStockDataQueryHandler" src/StockDataApi/Program.cs; then
              echo "Missing handler registration in Program.cs"
            fi
          fi

      - name: Create issue for manual fixes
        if: failure()
        uses: actions/github-script@v7
        with:
          script: |
            github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: `Auto-fix needed for PR #${context.payload.pull_request.number}`,
              body: `Build issues detected in PR #${context.payload.pull_request.number}. Please check:
              - Missing using statements
              - Service registrations in Program.cs
              - Entity Framework migrations
              - API endpoint consistency`,
              labels: ['auto-fix', 'build-error']
            })

  deploy-staging:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, docker-build]
    if: github.ref == 'refs/heads/develop'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to staging
        run: |
          echo "Deploying to staging environment..."
          # Add actual deployment commands here
          # docker-compose -f docker-compose.staging.yml up -d

  deploy-production:
    runs-on: ubuntu-latest
    needs: [build-backend, build-frontend, docker-build, security-scan]
    if: github.ref == 'refs/heads/main'

    steps:
      - uses: actions/checkout@v4

      - name: Deploy to production
        run: |
          echo "Deploying to production environment..."
          # Add actual deployment commands here
          # docker-compose -f docker-compose.prod.yml up -d
